<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on ShrinkLabs</title>
    <link>https://shrinklabs.com/categories/tools/</link>
    <description>Recent content in tools on ShrinkLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 19 Feb 2021 07:17:00 +0900</lastBuildDate><atom:link href="https://shrinklabs.com/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>local branch 삭제</title>
      <link>https://shrinklabs.com/post/git_delete-local-branch/</link>
      <pubDate>Fri, 19 Feb 2021 07:17:00 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/git_delete-local-branch/</guid>
      <description>로컬에서 관리하고 있는 branch iss5783을 삭제합니다.
$ git branch -d iss5783    (adsbygoogle = window.adsbygoogle || []).push({});  </description>
    </item>
    
    <item>
      <title>원격지의 branch 사용하기</title>
      <link>https://shrinklabs.com/post/git_remote-branch/</link>
      <pubDate>Mon, 01 Feb 2021 07:17:00 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/git_remote-branch/</guid>
      <description>github에 있는 branch를 로컬로 받아와서 작업하고 싶을때 할 수 있는 방법
원격지에 있는 branch 정보를 확인 할 수 있도록 업데이트 합니다.
$ git remote update 원격지의 branch 확인
$ git branch -r origin/HEAD -&amp;gt; origin/master origin/dev origin/tapping origin/master origin/9999 origin/release upstream/dev upstream/master upstream/8888 upstream/release branch들 중에서 &amp;ldquo;origin/9999&amp;quot;를 갖고 오고 싶습니다.
$ git checkout -t origin/9999    (adsbygoogle = window.adsbygoogle || []).push({});  </description>
    </item>
    
    <item>
      <title>upstream 설정</title>
      <link>https://shrinklabs.com/post/git_upstream/</link>
      <pubDate>Sun, 03 Jan 2021 03:29:09 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/git_upstream/</guid>
      <description>프로젝트 진행하는 과정에서 필요한 upstream 설정
해당 내용은 kubernetes의 GitHub Workflow 문서를 참고 했습니다. ( https://github.com/kubernetes/community/blob/master/contributors/guide/github-workflow.md )
  프로젝트를 https://github.com/kubernetes/kubernetes 에서 내 github 계정으로 Fork 합니다.
  Fork한 프로젝트를 내 로컬로 clone 합니다.
$ git clone git@github.com:{your-account}/kubernetes.git // 작업 디렉토리로 이동 $ cd kubernetes // 현재 브랜치를 확인합니다. $ git branch * master   upstream으로 사용할 remote를 추가 합니다. 최초 프로젝트를 추가 합니다.
$ git remote add upstream git@github.</description>
    </item>
    
    <item>
      <title>git push된 내용을 특정한 commit으로 되돌리기</title>
      <link>https://shrinklabs.com/post/git_reset/</link>
      <pubDate>Tue, 31 Jul 2018 10:09:41 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/git_reset/</guid>
      <description>&amp;ldquo;iss-123&amp;rdquo; 브랜치에서 작업하던 내용을 실수로 &amp;ldquo;iss-133&amp;rdquo; 브랜치로 push 하는 어이없는 실수를 했을때 &amp;ldquo;iss-133&amp;quot;에 push 된 내용을 이전으로 되돌려 놓아야 합니다.
git log로 이전 commit의 id를 확인합니다. (ex, d50fd96d2d7e5e5cf689b0943f2b2d20d4c2dda4)
[iss-133] $ git reset --hard d50fd96d2d7e5e5cf689b0943f2b2d20d4c2dda4 이제 변경된 내용을 push 합니다.
[iss-13] $ git push --force origin prj    (adsbygoogle = window.adsbygoogle || []).push({});  </description>
    </item>
    
    <item>
      <title>VM 설정</title>
      <link>https://shrinklabs.com/post/tool_vm/</link>
      <pubDate>Thu, 21 Apr 2016 14:39:36 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/tool_vm/</guid>
      <description>Labs 머신에서 사용할 vm을 생성할때 특이점
 vm 생성 Settings -&amp;gt; Network(Attached to: Bridged Adapter) Start(Network &amp;amp; Host Name)  Host Name: 지정 Ethernet(enp0s3): On Configure - IPv4 Settings  Method: Manual Addresses: Labs-Network guide 문서의 subnetmask, dns, gateway 그리고 사용할 ip 참조 Require IPv4 addressing for this connection to complete 항목 선택         (adsbygoogle = window.adsbygoogle || []).push({});  </description>
    </item>
    
    <item>
      <title>zsh(oh-my-zsh) 사용</title>
      <link>https://shrinklabs.com/post/tool_zsh/</link>
      <pubDate>Thu, 21 Apr 2016 14:39:36 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/tool_zsh/</guid>
      <description>zsh 설치하고 기본 쉘 변경 $ sudo apt-get install zsh $ which zsh /usr/bin/zsh $ chsh -s /usr/bin/zsh oh-my-zsh 설치 $ curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh 설정(개인 취향) .zshrc 의 ZSH_THEME를 minimal 로 변경
   (adsbygoogle = window.adsbygoogle || []).push({});  </description>
    </item>
    
  </channel>
</rss>
