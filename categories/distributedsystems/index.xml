<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>distributedsystems on ShrinkLabs</title>
    <link>https://shrinklabs.com/categories/distributedsystems/</link>
    <description>Recent content in distributedsystems on ShrinkLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 27 Jun 2021 21:33:58 +0900</lastBuildDate><atom:link href="https://shrinklabs.com/categories/distributedsystems/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Consul과 Golang을 사용한 리더 선출</title>
      <link>https://shrinklabs.com/post/leader_election_using_consul_and_golang/</link>
      <pubDate>Sun, 27 Jun 2021 21:33:58 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/leader_election_using_consul_and_golang/</guid>
      <description>이 글은 원글(Leader Election using Consul and Golang)의 저작자 Sunny Aggrawal씨의 허락을 받고 번역한 글 입니다.
 분산 컴퓨팅에서 리더 선택은 단일 노드를 여러 노드에 분산되는 일부 작업의 주관자로 지정하는 프로세스입니다. 처음에는 모든 네트워크 노드가 작업의 &amp;ldquo;리더&amp;rdquo; 역할을 할 노드를 알지 못합니다. 리더 선택 알고리즘이 실행된 후, 네트워크의 각 노드는 특정 고유 노드를 작업 리더로 인식하고 다른 노드는 팔로워 노드 역할을 합니다.
리더 - 클러스터의 노드가 특수 작업을 수행하도록 지정되었습니다. 이러한 특수 작업에는 작업 할당 기능, 데이터 수정 기능 또는 시스템의 모든 요청을 처리하는 책임도 포함될 수 있습니다.</description>
    </item>
    
    <item>
      <title>내결함성 수평 확장성이 있는 분산형 이벤트 스케줄러 설계 방법</title>
      <link>https://shrinklabs.com/post/scheduler_an-approach-to-designing-distributed-fault-tolerant-horizontally-scalable-event-scheduler/</link>
      <pubDate>Wed, 16 Jun 2021 00:17:00 +0900</pubDate>
      
      <guid>https://shrinklabs.com/post/scheduler_an-approach-to-designing-distributed-fault-tolerant-horizontally-scalable-event-scheduler/</guid>
      <description>이 글은 원글(An Approach to Designing a Distributed, Fault-Tolerant, Horizontally Scalable Event Scheduler)의 저작자 Sandeep Malik씨의 허락을 받고 번역한 글 입니다.
 소개 시간 기반 이벤트 스케줄러를 설계하는 것은 항상 흥미로운 문제입니다. 규모에 맞게 작업을 수행하는 것은 훨씬 더 어려운 일입니다. 먼저 시간 기반 이벤트 스케줄러가 무엇을 의미하는지 정의해 보겠습니다.
시간 기반 이벤트 스케줄러는 서비스가 나중에 (future) 처리해야 하는 요청을 예약하는 데 사용할 수 있는 시스템입니다. 서비스는 스케줄러에 이벤트(event)를 등록하고 현재 요청의 처리를 일시 중단합니다.</description>
    </item>
    
  </channel>
</rss>
