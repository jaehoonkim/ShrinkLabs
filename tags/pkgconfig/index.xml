<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pkgconfig on ShrinkLabs</title>
    <link>https://shrinklabs.com/tags/pkgconfig/</link>
    <description>Recent content in pkgconfig on ShrinkLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 06 Mar 2015 01:28:09 +0900</lastBuildDate>
    
	<atom:link href="https://shrinklabs.com/tags/pkgconfig/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pkg-config 사용</title>
      <link>https://shrinklabs.com/posts/pkg-config/</link>
      <pubDate>Fri, 06 Mar 2015 01:28:09 +0900</pubDate>
      
      <guid>https://shrinklabs.com/posts/pkg-config/</guid>
      <description>Go언어를 사용하다보면 C로 만들어진 라이브러리를 사용하기 위해서 cgo가 필요할 때 가 있다. 라이브러리를 링크하고 하는 몇 가지 절차를 거치게 되는데, 이때 pkg-config라는걸 사용하면 편리하다.
pkg-config를 사용하면 컴파일하는데 필요한 라이브러리와 헤더정보를 Go코드상에서 동일한 경로로 제공해줄 수 있게 된다.
pkg-config가 설치되어 있지 않을 경우에는 다음과 같이 설치를 해준다.
$ sudo apt-get install pkg-config  이제 설치되어 있는 라이브러리 목록을 한번 보자.
$ pkg-config --list-all  현재 설치된 라이브러리들의 정보가 나오게 된다.
그런데 내가 원하는 라이브러리의 정보가 나타나지 않는다.</description>
    </item>
    
  </channel>
</rss>